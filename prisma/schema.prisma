generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int             @id @default(autoincrement())
  name        String?         @db.VarChar(100)
  email       String          @unique @db.VarChar(100)
  password    String
  phone       String?         @db.VarChar(15)
  avatar      String?
  role        String          @default("employee") @db.VarChar(50)
  createdAt   DateTime?       @default(now()) @map("created_at")
  lastLogin   DateTime?       @map("last_login") // most recent login
  previousLogin  DateTime?    @map("previous_login") // login before last one

  // Relations
  leads         Lead[]          @relation("UserLeads")       // leads created by this user
  closedLeads   Lead[]          @relation("UserClosedLeads") // leads closed by this user
  activities    UserActivity[]

  @@map("users")
}

model Lead {
  id           Int        @id @default(autoincrement())
  title        String     @db.VarChar(255)
  customerName String     @map("customer_name") @db.VarChar(100)
  phone        String?    @db.VarChar(15)
  email        String?    @db.VarChar(100)
  source       String?    @db.VarChar(100)
  dueDate      DateTime?  @map("due_date")
  priority     String?    @db.VarChar(20)
  notes        String?
  status       String?    @default("New") @db.VarChar(50)
  createdBy    Int?       @map("created_by")
  closedBy     Int?       @map("closed_by")
  
  createdAt    DateTime?  @default(now()) @map("created_at")
  updatedAt    DateTime?  @default(now()) @map("updated_at")
  closedAt     DateTime?  @map("closed_at")

  // Relations
  creator      User?      @relation("UserLeads", fields: [createdBy], references: [id], onDelete: SetNull)
  closedByUser User?      @relation("UserClosedLeads", fields: [closedBy], references: [id], onDelete: SetNull)


  @@map("leads")
}

model UserActivity {
  id         Int       @id @default(autoincrement())
  userId     Int       @map("user_id")
  activity   String
  createdAt  DateTime? @default(now()) @map("created_at")

  //Relations
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_activity")
}